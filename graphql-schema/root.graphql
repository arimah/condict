# The root schema contains various essential types and definitions.

schema {
  query: Query
  mutation: Mutation
}

"The root query type."
type Query

"The root mutation type."
type Mutation

"Contains pagination details about a batch of a paginated collection."
type PageInfo {
  "The 0-based page number. This value is always greater than or equal to 0."
  page: Int!

  "The total number of items per page. This value is always at least 1."
  perPage: Int!

  """
  The total number of items in the paginated collection. This value is always
  greater than or equal to 0.
  """
  totalCount: Int!

  "Determines whether there are more items in the collection."
  hasNext: Boolean!

  """
  Determines whether there are items on earlier pages. This value is true if
  and only if \`page\` is greater than zero.
  """
  hasPrev: Boolean!
}

"Input type for pagination parameters."
input PageParams {
  "The 0-based page number. This value cannot be less than 0."
  page: Int!

  """
  The total number of items per page. This value cannot be less than 1. Each
  field defines its own upper limit.
  """
  perPage: Int!
}

"""
Indicates that an item contains metadata about when it was created and last
updated.
"""
interface ChangeInfo {
  """
  The time that the item was created.

  When this field is equal to `timeUpdated`, it means the item has not been
  edited since it was created.
  """
  timeCreated: UtcInstant!

  """
  The time of the most recent update to the item. This time covers updates
  performed on the item itself, and may cover updates on certain nested
  resources.

  When this field is equal to `timeCreated`, it means the item has not been
  edited since it was created.
  """
  timeUpdated: UtcInstant!
}

"""
Represents an instant in time. The value is sent as the number of milliseconds
since midnight 1 January 1970 UTC (that is, a value compatible with the JS
`Date` type).
"""
scalar UtcInstant @marshal(as: INT_TYPE)
