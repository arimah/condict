# The root schema contains various essential types and definitions.

schema {
  query: Query
  mutation: Mutation
}

"The root query type."
type Query

"The root mutation type."
type Mutation

"Contains pagination details about a batch of a paginated collection."
type PageInfo {
  "The 0-based page number. This value is always greater than or equal to 0."
  page: Int!

  "The total number of items per page. This value is always at least 1."
  perPage: Int!

  """
  The total number of items in the paginated collection. This value is always
  greater than or equal to 0.
  """
  totalCount: Int!

  "Determines whether there are more items in the collection."
  hasNext: Boolean!

  """
  Determines whether there are items on earlier pages. This value is true if
  and only if \`page\` is greater than zero.
  """
  hasPrev: Boolean!
}

"Input type for pagination parameters."
input PageParams {
  "The 0-based page number. This value cannot be less than 0."
  page: Int!

  """
  The total number of items per page. This value cannot be less than 1. Each
  field defines its own upper limit.
  """
  perPage: Int!
}

"""
Represents a date and time. The value is sent as the number of milliseconds
since midnight 1 January 1970 UTC (that is, a value compatible with the JS
`Date` type).
"""
scalar Date @marshal(as: INT_TYPE)
