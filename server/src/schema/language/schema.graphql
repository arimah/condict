enum LemmaFilter {
  "All lemmas are included in the result."
  ALL_LEMMAS

  """
  Include only lemmas that have at least one own definition (that is, where
  `Lemma.definitions` is not the empty list).
  """
  DEFINED_LEMMAS_ONLY

  """
  Include only lemmas that have at least one derived definition (that is, where
  `Lemma.definitions` is not the empty list).
  """
  DERIVED_LEMMAS_ONLY
}

type Language {
  "The globally unique ID of the language."
  id: ID!

  "The display name of the language."
  name: String!

  """
  The URL name of the language; that is, the name used and shown in the address
  bar.
  """
  urlName: String!

  "The parts of speech that belong to this language."
  partsOfSpeech: [PartOfSpeech!]!

  "The total number of lemmas in the dictionary."
  lemmaCount: Int!

  """
  The lemmas defined in the dictionary. Since a language usually contains many
  lemmas, this field is always paginated. If provided, `page.perPage` cannot
  exceed 200.
  """
  lemmas(
    page: PageParams
    filter: LemmaFilter = ALL_LEMMAS
  ): LemmaConnection!
}

type LemmaConnection {
  "Metadata about the connection, related to pagination."
  meta: ConnectionMeta!

  "The lemmas in this batch."
  values: [Lemma!]!
}

extend type Query {
  "Lists all languages in the dictionary."
  languages: [Language!]!

  """
  Finds a language by ID or URL name. You must specify either `id` or `urlName`.
  If you specfiy both, only `id` will be used.
  """
  language(id: ID, urlName: String): Language
}

input NewLanguageInput {
  "The display name of the language."
  name: String!

  """
  The URL name of the language; that is, the name used and shown in the address
  bar.
  """
  urlName: String!
}

input EditLanguageInput {
  "If set, updates the display name of the language."
  name: String

  "If set, updates the URL name of the language."
  urlName: String
}

extend type Mutation {
  """
  Adds a language.

  Requires authentication.
  """
  addLanguage(data: NewLanguageInput!): Language!

  """
  Edits a language.

  Requires authentication.
  """
  editLanguage(id: ID!, data: EditLanguageInput!): Language!
}
